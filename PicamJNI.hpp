/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_photonvision_raspi_PicamJNI */

#ifndef _Included_org_photonvision_raspi_PicamJNI
#define _Included_org_photonvision_raspi_PicamJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    initVCSMInfo
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_org_photonvision_raspi_PicamJNI_initVCSMInfo
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    setEGLHandles
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_photonvision_raspi_PicamJNI_setEGLImageHandle
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    createCamera
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_org_photonvision_raspi_PicamJNI_createCamera
  (JNIEnv *, jclass, jint, jint, jint);

/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    waitForOMXFillBufferDone
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_photonvision_raspi_PicamJNI_waitForOMXFillBufferDone
  (JNIEnv *, jclass);

/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    destroyCamera
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_photonvision_raspi_PicamJNI_destroyCamera
  (JNIEnv *, jclass);

/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    setExposure
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_photonvision_raspi_PicamJNI_setExposure
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    setBrightness
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_photonvision_raspi_PicamJNI_setBrightness
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    setISO
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_photonvision_raspi_PicamJNI_setISO
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    setRotation
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_photonvision_raspi_PicamJNI_setRotation
  (JNIEnv *, jclass, jint);

/*
 * Class:     org_photonvision_raspi_PicamJNI
 * Method:    grabFrame
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_photonvision_raspi_PicamJNI_grabFrame
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
